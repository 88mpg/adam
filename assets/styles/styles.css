/*! normalize.css v7.0.0 | MIT License | github.com/necolas/normalize.css */@import url("https://fonts.googleapis.com/css?family=Roboto+Slab:400,700");html{line-height:1.15;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}article,aside,footer,header,nav,section{display:block}h1{font-size:2em;margin:.67em 0}figcaption,figure,main{display:block}figure{margin:1em 40px}hr{-moz-box-sizing:content-box;box-sizing:content-box;height:0;overflow:visible}pre{font-family:monospace,monospace;font-size:1em}a{background-color:transparent;-webkit-text-decoration-skip:objects}abbr[title]{border-bottom:none;text-decoration:underline;text-decoration:underline dotted}b,strong{font-weight:inherit;font-weight:bolder}code,kbd,samp{font-family:monospace,monospace;font-size:1em}dfn{font-style:italic}mark{background-color:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}audio,video{display:inline-block}audio:not([controls]){display:none;height:0}img{border-style:none}svg:not(:root){overflow:hidden}button,input,optgroup,select,textarea{font-family:sans-serif;font-size:100%;line-height:1.15;margin:0}button,input{overflow:visible}button,select{text-transform:none}[type=reset],[type=submit],button,html [type=button]{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}fieldset{padding:.35em .75em .625em}legend{-moz-box-sizing:border-box;box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}progress{display:inline-block;vertical-align:baseline}textarea{overflow:auto}[type=checkbox],[type=radio]{-moz-box-sizing:border-box;box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-cancel-button,[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}details,menu{display:block}summary{display:list-item}canvas{display:inline-block}[hidden],template{display:none}:root{--dark:#2f434b;--light:#f5e3cb;--primary:#fa0;--primaryDark:#ff9100;--secondary:#2f8dca;--secondaryLight:#00a0b0}a,abbr,acronym,address,applet,article,aside,audio,b,big,blockquote,body,canvas,caption,center,cite,code,dd,del,details,dfn,div,dl,dt,em,embed,fieldset,figcaption,figure,footer,form,h1,h2,h3,h4,h5,h6,header,hgroup,html,i,iframe,img,ins,kbd,label,legend,li,mark,menu,nav,object,ol,output,p,pre,q,ruby,s,samp,section,small,span,strike,strong,sub,summary,sup,table,tbody,td,tfoot,th,thead,time,tr,tt,u,ul,var,video{margin:0;padding:0;border:0;font-size:100%;vertical-align:baseline;text-transform:none}article,aside,details,figcaption,figure,footer,header,hgroup,menu,nav,section{display:block}body{line-height:1}ol,ul{list-style:none}img{vertical-align:middle}blockquote,q{quotes:none}blockquote:after,blockquote:before,q:after,q:before{content:"";content:none}table{border-collapse:collapse;border-spacing:0}::-moz-selection{background-color:var(--light)}::selection{background-color:var(--light)}*{-moz-box-sizing:border-box;box-sizing:border-box}:active,:focus,:hover{outline:0!important}.svg--logo{fill:none;stroke:var(--dark);stroke-width:60;stroke-miterlimit:10;-webkit-transition:all .3s ease;transition:all .3s ease}a{color:var(--dark);text-decoration:none}h1,h2,h3,h4,p{-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;max-width:670px;margin-bottom:1.5rem}h1:last-child,h2:last-child,h3:last-child,h4:last-child,p:last-child{margin-bottom:0}h1{font-size:4em}@media only screen and (max-width:750px){h1{font-size:2.2rem}}h2{font-size:3em;line-height:1.2}@media only screen and (max-width:750px){h2{font-size:1.8em}}h3{font-size:1.4em}h3,h4{line-height:1.4}p{font-size:1em;line-height:1.5}@media only screen and (max-width:750px){p{font-size:1.2em}}.scroll{width:100%;text-align:center;font-size:6em;text-shadow:none;-webkit-transition:-webkit-transform .1s ease-in;transition:-webkit-transform .1s ease-in;transition:transform .1s ease-in;transition:transform .1s ease-in,-webkit-transform .1s ease-in}body{font-family:Roboto Slab,serif;background:var(--light);position:relative;font-size:16px}@media only screen and (max-width:750px){body{font-size:12px}}.adam{border-left:0 solid var(--dark);border-right:0 var(--dark);max-width:1200px;margin-left:auto;margin-right:auto;margin-bottom:-webkit-calc(100vh - 4rem)!important;margin-bottom:calc(100vh - 4rem)!important}section{padding:1rem;-webkit-box-pack:center;-webkit-justify-content:center;-moz-box-pack:center;-ms-flex-pack:center;justify-content:center}.adam nav,section{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-webkit-align-items:center;-moz-box-align:center;-ms-flex-align:center;align-items:center}.adam nav{z-index:1000;-webkit-box-pack:end;-webkit-justify-content:flex-end;-moz-box-pack:end;-ms-flex-pack:end;justify-content:flex-end;padding:1rem 0;font-size:.8em;position:-webkit-sticky;position:sticky;top:-3rem;height:4rem;width:100%;border-bottom:0 solid var(--dark);background-color:var(--primary);-webkit-transition:all .2s ease-in-out;transition:all .2s ease-in-out}.adam nav .logo{position:absolute;left:1rem;height:-webkit-calc(100% - 1rem*2);height:calc(100% - 1rem*2)}.adam nav .logo svg{height:100%}.adam nav .logo:hover .svg--logo{stroke:var(--primaryDark)}.adam nav.expand,.adam nav:hover{top:0}.adam nav li{display:inline-block}.adam nav a{font-size:.8rem;margin-right:1rem}.adam nav a:hover{text-decoration:underline}.adam .hero{position:-webkit-sticky;position:sticky;top:-webkit-calc(-100vh + 1rem*3 + 4rem);top:calc(-100vh + 1rem*3 + 4rem);height:-webkit-calc(100vh - 4rem - 1rem);height:calc(100vh - 4rem - 1rem);z-index:950;max-width:100%;background-color:var(--primaryDark);color:var(--dark);-ms-flex-align:center;-webkit-justify-content:space-around;-ms-flex-pack:distribute;justify-content:space-around;-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-moz-box-orient:vertical;-moz-box-direction:normal;-ms-flex-direction:column;flex-direction:column}.adam .hero,.adam .hero--content{padding:1rem;display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-webkit-align-items:center;-moz-box-align:center;align-items:center}.adam .hero--content{-webkit-flex-basis:95%;-ms-flex-preferred-size:95%;flex-basis:95%;width:100%;-ms-flex-align:center;-webkit-box-pack:center;-webkit-justify-content:center;-moz-box-pack:center;-ms-flex-pack:center;justify-content:center}.adam .hero .scroll:hover{-webkit-transform:translateY(.5rem);transform:translateY(.5rem)}.adam .projects{position:-webkit-sticky;position:sticky;min-height:-webkit-calc(100vh - 1rem*3);min-height:calc(100vh - 1rem*3);top:-webkit-calc(-100vh + 1rem*6);top:calc(-100vh + 1rem*6);z-index:900;background-color:var(--dark);color:var(--light)}.adam .projects--container{width:100%;max-width:720px;margin-left:auto;margin-right:auto}.adam .projects h4{margin-bottom:5rem}.adam .projects--grid{display:-ms-grid;display:grid;grid-auto-rows:minmax(150px,auto);grid-gap:20px}@media (min-width:414px){.adam .projects--grid{-ms-grid-columns:(1fr)[1];grid-template-columns:repeat(1,1fr)}}@media (min-width:768px){.adam .projects--grid{-ms-grid-columns:(1fr)[2];grid-template-columns:repeat(2,1fr)}}.adam .projects--title{color:var(--primary);display:block;margin-bottom:1rem;font-size:1.4rem}.adam .passions{position:-webkit-sticky;position:sticky;background-color:#00a0b0;min-height:-webkit-calc(100vh - 1rem*4);min-height:calc(100vh - 1rem*4);top:-webkit-calc(-100vh + 1rem*8);top:calc(-100vh + 1rem*8);z-index:800;background-color:var(--secondaryLight);color:var(--dark)}.adam .footer{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-webkit-justify-content:center;-moz-box-pack:center;-ms-flex-pack:center;justify-content:center;-webkit-box-align:center;-webkit-align-items:center;-moz-box-align:center;-ms-flex-align:center;align-items:center;padding:1rem;color:var(--dark);background-color:var(--light);position:fixed;height:-webkit-calc(100vh - 4rem);height:calc(100vh - 4rem);bottom:0;z-index:-1;width:1200px;max-width:100%}.adam .footer .scroll{position:absolute;bottom:1rem}.adam .footer .scroll:hover{-webkit-transform:translateY(-.5rem);transform:translateY(-.5rem)}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
